{
  "id": "manifest",
  "definitions": {},
  "refs": {},
  "types": {
    "WebExtensionManifest": {
      "allOf": [
        {
          "type": "object",
          "description": "Represents a WebExtension manifest.json file",
          "properties": {
            "manifest_version": {
              "type": "integer",
              "minimum": 2,
              "maximum": 2
            },
            "minimum_chrome_version": {
              "type": "string",
              "optional": true
            },
            "applications": {
              "type": "object",
              "optional": true,
              "properties": {
                "gecko": {
                  "$ref": "#/types/FirefoxSpecificProperties",
                  "optional": true
                }
              }
            },
            "browser_specific_settings": {
              "type": "object",
              "optional": true,
              "properties": {
                "gecko": {
                  "$ref": "#/types/FirefoxSpecificProperties",
                  "optional": true
                }
              }
            },
            "name": {
              "type": "string",
              "optional": false,
              "preprocess": "localize"
            },
            "short_name": {
              "type": "string",
              "optional": true,
              "preprocess": "localize"
            },
            "description": {
              "type": "string",
              "optional": true,
              "preprocess": "localize"
            },
            "author": {
              "type": "string",
              "optional": true,
              "preprocess": "localize",
              "onError": "warn"
            },
            "version": {
              "type": "string",
              "optional": false
            },
            "homepage_url": {
              "type": "string",
              "format": "url",
              "optional": true,
              "preprocess": "localize"
            },
            "icons": {
              "type": "object",
              "optional": true,
              "patternProperties": {
                "^[1-9]\\d*$": {
                  "type": "string"
                }
              }
            },
            "incognito": {
              "type": "string",
              "enum": [
                "spanning"
              ],
              "optional": true,
              "onError": "warn"
            },
            "background": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "page": {
                      "$ref": "#/types/ExtensionURL"
                    },
                    "persistent": {
                      "optional": true,
                      "$ref": "#/types/PersistentBackgroundProperty"
                    }
                  },
                  "additionalProperties": {
                    "$ref": "#/types/UnrecognizedProperty"
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "scripts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/types/ExtensionURL"
                      }
                    },
                    "persistent": {
                      "optional": true,
                      "$ref": "#/types/PersistentBackgroundProperty"
                    }
                  },
                  "additionalProperties": {
                    "$ref": "#/types/UnrecognizedProperty"
                  }
                }
              ],
              "optional": true
            },
            "options_ui": {
              "type": "object",
              "optional": true,
              "properties": {
                "page": {
                  "$ref": "#/types/ExtensionURL"
                },
                "browser_style": {
                  "type": "boolean",
                  "optional": true
                },
                "chrome_style": {
                  "type": "boolean",
                  "optional": true
                },
                "open_in_tab": {
                  "type": "boolean",
                  "optional": true
                }
              },
              "additionalProperties": {
                "type": [
                  "array",
                  "boolean",
                  "null",
                  "number",
                  "object",
                  "string"
                ],
                "deprecated": "An unexpected property was found in the WebExtension manifest"
              }
            },
            "content_scripts": {
              "type": "array",
              "optional": true,
              "items": {
                "$ref": "#/types/ContentScript"
              }
            },
            "content_security_policy": {
              "type": "string",
              "optional": true,
              "format": "contentSecurityPolicy",
              "onError": "warn"
            },
            "permissions": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/types/Permission"
                  },
                  {
                    "type": "string",
                    "deprecated": "Unknown permission ${value}"
                  }
                ]
              },
              "optional": true
            },
            "web_accessible_resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "optional": true
            },
            "developer": {
              "type": "object",
              "optional": true,
              "properties": {
                "name": {
                  "type": "string",
                  "optional": true,
                  "preprocess": "localize"
                },
                "url": {
                  "type": "string",
                  "optional": true,
                  "preprocess": "localize"
                }
              }
            }
          },
          "additionalProperties": {
            "$ref": "#/types/UnrecognizedProperty"
          }
        },
        {
          "$ref": "i18n#/definitions/WebExtensionManifest"
        }
      ]
    },
    "Permission": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "alarms",
            "clipboardWrite",
            "idle",
            "notifications",
            "storage"
          ]
        },
        {
          "$ref": "#/types/MatchPattern"
        },
        {
          "$ref": "downloads#/definitions/Permission"
        }
      ]
    },
    "ExtensionURL": {
      "type": "string",
      "format": "strictRelativeUrl"
    },
    "ExtensionID": {
      "anyOf": [
        {
          "type": "string",
          "pattern": "^\\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\}$"
        },
        {
          "type": "string",
          "pattern": "^[a-z0-9-._]*@[a-z0-9-._]+$"
        }
      ]
    },
    "FirefoxSpecificProperties": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/types/ExtensionID",
          "optional": true
        },
        "update_url": {
          "type": "string",
          "format": "url",
          "optional": true
        },
        "strict_min_version": {
          "type": "string",
          "optional": true
        },
        "strict_max_version": {
          "type": "string",
          "optional": true
        }
      }
    },
    "MatchPattern": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "<all_urls>"
          ]
        },
        {
          "type": "string",
          "pattern": "^(https?|file|ftp|\\*)://(\\*|\\*\\.[^*/]+|[^*/]+)/.*$"
        },
        {
          "type": "string",
          "pattern": "^file:///.*$"
        }
      ]
    },
    "ContentScript": {
      "type": "object",
      "description": "Details of the script or CSS to inject. Either the code or the file property must be set, but both may not be set at the same time. Based on InjectDetails, but using underscore rather than camel case naming conventions.",
      "additionalProperties": {
        "$ref": "#/types/UnrecognizedProperty"
      },
      "properties": {
        "matches": {
          "type": "array",
          "optional": false,
          "minItems": 1,
          "items": {
            "$ref": "#/types/MatchPattern"
          }
        },
        "exclude_matches": {
          "type": "array",
          "optional": true,
          "minItems": 1,
          "items": {
            "$ref": "#/types/MatchPattern"
          }
        },
        "include_globs": {
          "type": "array",
          "optional": true,
          "items": {
            "type": "string"
          }
        },
        "exclude_globs": {
          "type": "array",
          "optional": true,
          "items": {
            "type": "string"
          }
        },
        "css": {
          "type": "array",
          "optional": true,
          "description": "The list of CSS files to inject",
          "items": {
            "$ref": "#/types/ExtensionURL"
          }
        },
        "js": {
          "type": "array",
          "optional": true,
          "description": "The list of CSS files to inject",
          "items": {
            "$ref": "#/types/ExtensionURL"
          }
        },
        "all_frames": {
          "type": "boolean",
          "optional": true,
          "description": "If allFrames is <code>true</code>, implies that the JavaScript or CSS should be injected into all frames of current page. By default, it's <code>false</code> and is only injected into the top frame."
        },
        "match_about_blank": {
          "type": "boolean",
          "optional": true,
          "description": "If matchAboutBlank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Code cannot be inserted in top-level about:-frames. By default it is <code>false</code>."
        },
        "run_at": {
          "$ref": "extensionTypes#/types/RunAt",
          "optional": true,
          "description": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \"document_idle\"."
        }
      }
    },
    "IconPath": {
      "anyOf": [
        {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "#/types/ExtensionURL"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "#/types/ExtensionURL"
        }
      ]
    },
    "IconImageData": {
      "anyOf": [
        {
          "type": "object",
          "patternProperties": {
            "^[1-9]\\d*$": {
              "$ref": "#/types/ImageData"
            }
          },
          "additionalProperties": false
        },
        {
          "$ref": "#/types/ImageData"
        }
      ]
    },
    "ImageData": {
      "type": "object",
      "isInstanceOf": "ImageData",
      "postprocess": "convertImageDataToURL"
    },
    "UnrecognizedProperty": {
      "type": [
        "array",
        "boolean",
        "null",
        "number",
        "object",
        "string"
      ],
      "deprecated": "An unexpected property was found in the WebExtension manifest."
    },
    "PersistentBackgroundProperty": {
      "type": "boolean",
      "deprecated": "Event pages are not currently supported. This will run as a persistent background page."
    }
  },
  "$ref": "#/types/WebExtensionManifest"
}